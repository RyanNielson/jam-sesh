<script type="text/javascript">
  var audioBuffers = new Object();
  var audioContext;
  var pusher = new Pusher("<%= ENV['PUSHER_KEY'] %>");
  var pad_channel = pusher.subscribe('pads');
  var privateChannel = pusher.subscribe('private-notes');
  var markers = [];

  privateChannel.bind('pusher:subscription_succeeded', function() {
    console.log("subscribed");
    privateChannel.bind('client-note_played', function(data) {
      $item = $('<div>').addClass('visualize instrument-'+data.instrument+' note-' + data.note);
      $item.css({
        position: 'absolute',
        left: (Math.random() * 100) + '%',
        top: (Math.random() * 100) + '%'
      });
      $('.container').append($item);
      console.log($item.attr('class'));
      $item.addClass('visualize-loaded');
      $($item).animate({
        top: '200%'
      }, 3000, function(){
        $item.remove();
      });
      console.log($item.attr('class'));
      playSound(audioContext, audioBuffers["s" + data.instrument + "_" + data.note]);
    });
  });

  pad_channel.bind('pad_change', function(data) {
    // window.oscillator1.frequency.value = 440 * Math.pow(Math.pow(2,data.pad),1/12)
    // window.oscillator2.frequency.value = 450 * Math.pow(Math.pow(2,data.pad),1/12)
    // window.oscillator3.frequency.value = 460 * Math.pow(Math.pow(2,data.pad),1/12)
    console.log(data);
    for(var i = 0; i<window.tones.length; i++){
      window.tones[i].osc.frequency.value = window.tones[i].freq * Math.pow(Math.pow(2,data.pad),1/12);
    }
  });

  window.onload = initAudio;
  
  function initAudio() {
    window.AudioContext = window.AudioContext || window.webkitAudioContext;
    audioContext = new AudioContext();

    var context = new webkitAudioContext();
      var vol = 0.25;

    window.tones = 
        [
            {
                type : 0,
                freq : 220,
                amp : 1 * vol
            },
            {
                type : 0,
                freq : 293.66,
                amp : 0.5 * vol
            },
            {
                type : 0,
                freq : 392.00,
                amp : 0.5 * vol
            },
            {
                type : 0,
                freq : 440,
                amp : 1 * vol
            },
            {
                type : 0,
                freq : 441,
                amp : 1 * vol
            },
            /*{
                type : 0,
                freq : 446,
                amp : 1 * vol
            },
            {
                type : 0,
                freq : 445,
                amp : 1 * vol
            },*/
            {
                type : 0,
                freq : 219,
                amp : 0.2 * vol
            },
            {
                type : 0,
                freq : 221,
                amp : 0.2 * vol
            },
            {
                type : 0,
                freq : 392.00,
                amp : 0.5 * vol
            },
            {
                type : 0,
                freq : 55,
                amp : 0.25 * vol
            }
        ];

    window.filter = context.createBiquadFilter();
    window.filter.type = 'bandpass';
    window.filter.connect(context.destination);
    for(var i = 0; i<tones.length; i++){
        tones[i].osc = context.createOscillator();
        tones[i].osc.type = tones[i].type;
        tones[i].osc.frequency.value = tones[i].freq;
        tones[i].gain = context.createGainNode();
        //tones[i].gain.connect(context.destination);
        tones[i].gain.connect(window.filter);
        tones[i].gain.gain.value = tones[i].amp;
        tones[i].osc.connect(tones[i].gain);
        //tones[i].osc.connect(window.filter);
        //tones[i].osc.start(0);
    }

    
    var context = new webkitAudioContext();

    var bufferLoader = new BufferLoader(
      audioContext,
      {
        s0_0: "<%= asset_path('i0/s0.mp3') %>",
        s0_1: "<%= asset_path('i0/s1.mp3') %>",
        s0_2: "<%= asset_path('i0/s2.mp3') %>",
        s0_3: "<%= asset_path('i0/s3.mp3') %>",
        s0_4: "<%= asset_path('i0/s4.mp3') %>",
        s0_5: "<%= asset_path('i0/s5.mp3') %>",

        s1_0: "<%= asset_path('i1/s0.mp3') %>",
        s1_1: "<%= asset_path('i1/s1.mp3') %>",
        s1_2: "<%= asset_path('i1/s2.mp3') %>",
        s1_3: "<%= asset_path('i1/s3.mp3') %>",
        s1_4: "<%= asset_path('i1/s4.mp3') %>",
        s1_5: "<%= asset_path('i1/s5.mp3') %>",

        s2_0: "<%= asset_path('i2/s0.mp3') %>",
        s2_1: "<%= asset_path('i2/s1.mp3') %>",
        s2_2: "<%= asset_path('i2/s2.mp3') %>",
        s2_3: "<%= asset_path('i2/s3.mp3') %>",
        s2_4: "<%= asset_path('i2/s4.mp3') %>",
        s2_5: "<%= asset_path('i2/s5.mp3') %>",

        s3_0: "<%= asset_path('i3/s0.mp3') %>",
        s3_1: "<%= asset_path('i3/s1.mp3') %>",
        s3_2: "<%= asset_path('i3/s2.mp3') %>",
        s3_3: "<%= asset_path('i3/s3.mp3') %>",
        s3_4: "<%= asset_path('i3/s4.mp3') %>",
        s3_5: "<%= asset_path('i3/s5.mp3') %>"
      },
      finishedLoading
      );

    bufferLoader.load();
  }

  function finishedLoading(bufferList) {
    for (var key in bufferList){
      audioBuffers[key] = bufferList[key];
    }
  }
</script>